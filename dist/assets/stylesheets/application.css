html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:bold}dfn{font-style:italic}h1{font-size:2em;margin:0.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-0.5em}sub{bottom:-0.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace, monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type="button"],input[type="reset"],input[type="submit"]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type="checkbox"],input[type="radio"]{box-sizing:border-box;padding:0}input[type="number"]::-webkit-inner-spin-button,input[type="number"]::-webkit-outer-spin-button{height:auto}input[type="search"]{-webkit-appearance:textfield;box-sizing:content-box}input[type="search"]::-webkit-search-cancel-button,input[type="search"]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid #c0c0c0;margin:0 2px;padding:0.35em 0.625em 0.75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:bold}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}html{-webkit-font-smoothing:antialiased;height:100%}:root{box-sizing:border-box;font-size:16px}*,*:after,*:before{box-sizing:inherit;margin:0;padding:0}.body{padding:0 80px}.steps-timeline{padding-top:150px}@media only screen and (max-width: 768px){.steps-timeline{padding-top:50px;margin-left:0}}.steps-timeline__timeline-block li{display:inline-block;width:10%;font-size:0;position:relative}@media only screen and (max-width: 768px){.steps-timeline__timeline-block li{display:block;width:auto}}.steps-timeline__timeline-block li:before,.steps-timeline__timeline-block li:after{content:'';position:relative}.steps-timeline__timeline-block li:before{display:inline-block;height:40px;width:40px;-webkit-border-radius:50%;-moz-border-radius:50%;-ms-border-radius:50%;-o-border-radius:50%;border-radius:50%;background:#fff;border:5px solid #d46465;vertical-align:middle;z-index:1000}.steps-timeline__timeline-block li:after{display:block;top:-21px;left:10px;border:2px solid #333}@media only screen and (max-width: 768px){.steps-timeline__timeline-block li:after{width:0;height:30px;top:0;left:18px}}.steps-timeline__timeline-block li:last-child{width:0}@media only screen and (max-width: 768px){.steps-timeline__timeline-block li:last-child{width:100%}}.steps-timeline__timeline-block li:last-child:after{border:0}.steps-timeline__timeline-block li .step-title{display:table;position:absolute;top:58px;left:-42px;width:120px;color:#000;font-size:1rem;font-weight:300;line-height:1.25rem;text-align:center}@media only screen and (max-width: 768px){.steps-timeline__timeline-block li .step-title{top:0;left:55px;min-height:38px;max-width:150px;width:100%;font-size:0.875rem;text-align:left}}.steps-timeline__timeline-block li .step-title span{display:table-cell;vertical-align:top}@media only screen and (max-width: 768px){.steps-timeline__timeline-block li .step-title span{vertical-align:middle}}.steps-timeline__timeline-block li:first-child .step-title,.steps-timeline__timeline-block li:nth-child(2n+3) .step-title{min-height:38px;background:none;top:-58px;padding-top:0px}@media only screen and (max-width: 768px){.steps-timeline__timeline-block li:first-child .step-title,.steps-timeline__timeline-block li:nth-child(2n+3) .step-title{top:0;left:55px;text-align:left}}.steps-timeline__timeline-block li:first-child .step-title span,.steps-timeline__timeline-block li:nth-child(2n+3) .step-title span{vertical-align:bottom}@media only screen and (max-width: 768px){.steps-timeline__timeline-block li:first-child .step-title span,.steps-timeline__timeline-block li:nth-child(2n+3) .step-title span{vertical-align:middle}}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
